version: "3.2"
services:

  redis:
    image: redis:6.2.1-alpine3.13
    ports:
     - 6379:6379
    # command: redis-server --requirepass sOmE_sEcUrE_pAsS
    # volumes:
    #  - $PWD/redis-data:/var/lib/redis
    #   - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    # environment:
    #  - REDIS_REPLICATION_MODE=master

  nats:
    image: nats:2.2.0-alpine3.13
    command: -js
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222
    networks:
      - default
      # - nats

  # nats-node:
  #   image: nats:2.1.9-alpine3.12
  #   command: "--cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
  #   networks: ["nats"]
  #   depends_on: ["nats"]
  #   deploy:
  #     replicas: 1

  rabbitmq:
    image: rabbitmq:3.8.14-alpine
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
    #     - ./delivery/docker/rabbitmq/etc/:/etc/rabbitmq/
        - ./delivery/docker/rabbitmq/data/:/var/lib/rabbitmq/
        - ./delivery/docker/rabbitmq/logs/:/var/log/rabbitmq/
    # environment:
    #     RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
    #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
    #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - ./delivery/docker/kafka/zoo/data:/data
      - ./delivery/docker/kafka/zoo/datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./delivery/docker/kafka/kafka/data:/var/lib/kafka/data
    depends_on:
      - zoo

# networks:
#   nats:
#     name: nats